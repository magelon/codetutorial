import { Component, OnInit,ViewChild ,Inject,forwardRef } from '@angular/core';
import { ActivatedRoute ,Router } from '@angular/router';
import { FormBuilder,FormGroup,Validators,FormControl } from '@angular/forms';

import { AngularFireDatabase,AngularFireObject,AngularFireList  } from '@angular/fire/database';
import { Observable, from, Observer } from 'rxjs';
import { AngularFireAuth } from '@angular/fire/auth';
import { auth } from 'firebase/app';

import {Pipe,PipeTransform} from '@angular/core';

@Pipe({
  name: 'reverse'
})
export class ReversePipe implements PipeTransform {

  transform(value) {
    if(!value)return value
      return value.reverse();
    }
}

@Component({
  selector: 'app-print-page',
  templateUrl: './print-page.component.html',
  styleUrls: ['./print-page.component.css']
})
export class PrintPageComponent implements OnInit {

tabs
name;
email;
userId;
contractor;
jobId;
companyName;

itemsRef: AngularFireObject<any>;

info;
subha: boolean;
hours

constructor(
  private route: ActivatedRoute,
  private formBuilder: FormBuilder,
  public db: AngularFireDatabase,
  public afAuth:AngularFireAuth,
  private router: Router,
) {
}

print(){
  window.print()
}

sentEmail(){
  window.location.href=`mailto:""?subject="Job tag generated by Daydaco owner:${this.companyName},contractor:${this.contractor},trucker:${this.name}"&body="http://daydaco-19a9b.web.app/print/${this.userId}/${this.contractor}/${this.jobId}"`
}

  ngOnInit() {

    console.log(new Date().toLocaleTimeString())

    this.route.paramMap.subscribe(params => {
      //this.companyName = params.get('companyName');userid/:contractor/:jobid
      this.userId=params.get('userid');
      this.contractor=params.get('contractor');
      this.jobId=params.get('jobid');
    });

    this.afAuth.auth.onAuthStateChanged(user=>{
      if(user){
        this.name=this.afAuth.auth.currentUser.displayName;
        this.email=this.afAuth.auth.currentUser.email;
      }});

this.db.object(`trucker/${this.userId}`).query.once('value')
.then(data=>{
  let obj=data.val()
  this.companyName=obj['Employer']

    //get loads list 
    this.tabs=this.db.list(`done/${this.companyName}/${this.userId}/${this.contractor}/${this.jobId}/Loads`)
    .valueChanges()
    
     //get on going job info
    this.itemsRef = this.db
    .object
    (`done/${this.companyName}/${this.userId}/${this.contractor}/${this.jobId}`);

    this.itemsRef.snapshotChanges().subscribe(action => {
    //console.log(action.type)
    //console.log(action.key)
    if(action.payload.val()==null){
    }else{
      //go to profile page
      this.info=action.payload.val();
      this.hours=this.info.NetTime;
      // this.hours=(Math.round(this.info.TotalTime*10000))/10000
      if(this.info.SubHauler==''){
        this.subha=true;
      }else{
        this.subha=false;
      }
    }
  }
)
})
 
}

}
